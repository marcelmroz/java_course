package solution;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Enter amount of magazine words: ");
        int m = in.nextInt();
        System.out.println("Enter amount of needed words: ");
        int n = in.nextInt();
        String magazineWords[] = new String[m];
        System.out.println("Enter magazine words: ");
        for(int tempMagazine=0; tempMagazine < m; tempMagazine++){
            magazineWords[tempMagazine] = in.next();
        }
        String ransom[] = new String[n];
        System.out.println("Enter needed words: ");
        for(int tempRansom=0; tempRansom < n; tempRansom++){
            ransom[tempRansom] = in.next();
        }
        
        if(canMake(magazineWords,ransom) == true) {
            System.out.println("Yes");
        }else {
            System.out.println("No");
        }
    }
    
    public static boolean canMake(String[] magazineW, String[] ransomW){
    Map<String, Integer> magazineOccurences = new HashMap<>();
    Map<String, Integer> ransomOccurences = new HashMap<>();

    for(String word: magazineW){
        if (!magazineOccurences.containsKey(word)) magazineOccurences.put(word, 0);
        magazineOccurences.put(word, magazineOccurences.get(word) + 1);
    }

    for(String word: ransomW){
        if (!ransomOccurences.containsKey(word)) ransomOccurences.put(word, 0);
        ransomOccurences.put(word, ransomOccurences.get(word) + 1);
    }

    for(String temp: ransomOccurences.keySet()){
        if (!magazineOccurences.containsKey(temp)) return false;
        int needed = ransomOccurences.get(temp);
        if (magazineOccurences.get(temp) < needed) return false;
    }
    return true;
}


}
